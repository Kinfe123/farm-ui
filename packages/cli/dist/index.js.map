{"version":3,"sources":["../src/index.ts","../src/commands/add.ts","../src/utils/get-package-info.ts","../src/utils/ascii-arts.ts","../src/utils/logger.ts","../src/utils/get-package-manager.ts","../src/utils/get-suppoted.ts"],"sourcesContent":["import \"dotenv/config\"\nimport { Command } from \"commander\";\n\nimport { add } from \"./commands/add\";\nimport { getPackageInfo } from \"./utils/get-package-info\";\n\nprocess.on(\"SIGINT\", () => process.exit(0));\nprocess.on(\"SIGTERM\", () => process.exit(0));\n\nasync function main() {\n  const packageInfo = await getPackageInfo();\n\n  const program = new Command()\n    .name(\"farmui\")\n    .description(\"Add natively farmed farmUI blocks \")\n    .version(\n      packageInfo.version || \"0.1.0\",\n      \"-v, --version\",\n      \"display the version number\",\n    );\n\n  program.addCommand(add)\n\n  program.parse();\n}\n\nmain();\n","import \"dotenv/config\";\nimport { existsSync, promises as fs } from \"fs\";\nimport path from \"path\";\nimport gradient from \"gradient-string\";\nimport { Command } from \"commander\";\nimport ora from \"ora\";\nimport { execa } from \"execa\";\nimport prompts from \"prompts\";\nimport { FARMUI_GRAFFITI } from \"../utils/ascii-arts\";\nimport { logger } from \"../utils/logger\";\nimport { custom, z } from \"zod\";\nimport { getPackageManager } from \"../utils/get-package-manager\";\nimport { getPackageInfo } from \"../utils/get-package-info\";\nimport { framework_supports } from \"../utils/get-suppoted\";\nimport { type Config } from \"tailwindcss/types/config\";\nimport { TAILWIND_CONFIG } from \"../utils/templates\";\n\nprocess.on(\"SIGINT\", () => process.exit(0));\nprocess.on(\"SIGTERM\", () => process.exit(0));\n\nconst COMPONENT_REGISTERY_URL = \"https://farmui-api.vercel.app/api/components\";\ntype CompToAddProps = {\n  comp_path: string;\n  comp_content: string;\n};\nconst addCommandInput = z.object({\n  id: z.string(),\n  cwd: z.string(),\n});\nconst TAILWIND_EXTEND_PROPS = [\"animation\", \"keyframes\"];\nconsole.log(gradient(\"pink\", \"blue\")(FARMUI_GRAFFITI));\n\nexport const add = new Command()\n\n  .name(\"add\")\n  .description(\"add a new component or UI from farmui\")\n  .argument(\n    \"<string>\",\n    \"id of the component from https://farmui.com/components\"\n  )\n  // .option(\"--id\", \"id of the component\")\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (id, opts) => {\n    const options = addCommandInput.parse({\n      id,\n      ...opts,\n    });\n\n    const custom_cwd = path.resolve(options.cwd);\n    const default_fm = framework_supports[0];\n    let framework = default_fm.value; // the default one we supoort.\n    if (!existsSync(custom_cwd)) {\n      logger.error(`There is no ${custom_cwd} exists your paths.`);\n      process.exit(0);\n    }\n    let defaultDir = \"components\";\n\n    const custom_cwd_flag = process.cwd() === options.cwd;\n    // already found the id and next will be finding the component id\n    try {\n      if (!custom_cwd_flag) {\n        logger.info(`The component is being dumped inside of ${custom_cwd} `);\n      } else {\n        const { dir } = await prompts({\n          type: \"text\",\n          name: \"dir\",\n          message: `A directory to dump the components? (Leave it blank which default to /components dir) `,\n          hint: \"components\",\n        });\n        if (dir) {\n          defaultDir = dir;\n        }\n      }\n      const { srcDir } = await prompts({\n        type: \"select\",\n        name: \"srcDir\",\n        message: \"Do you have use /src directory ?\",\n        hint: \"Space to select and Enter to submit.\",\n        instructions: false,\n        choices: ['Yes', 'No'].map((resp) => ({\n          title: resp,\n          value: resp,\n          selected: resp === \"Yes\",\n        })),\n      });\n      if (srcDir === \"Yes\") {\n        defaultDir = '/src' + defaultDir\n      }\n\n      const { fm } = await prompts({\n        type: \"select\",\n        name: \"fm\",\n        message: \"Which framework do you want to use with?\",\n        hint: \"Space to select and Enter to submit.\",\n        instructions: false,\n        choices: framework_supports.map((fm) => ({\n          title: fm.name,\n          value: fm.value,\n          selected: fm.value === \"react\",\n        })),\n      });\n      if (fm) {\n        framework = fm;\n      }\n      if (framework !== \"react\") {\n        logger.error(\n          `We are not currently supporting ${fm} on https://farmui.com.`\n        );\n        logger.info(\n          \"Be a part of the community by adding an integration to your favorite framework, go for https://github.com/Kinfe123/farm-ui\"\n        );\n        process.exit(0);\n      }\n      // should be prompting it for directory the components to be stored (defaults to /components)\n      const path_ = path.join(custom_cwd, defaultDir);\n      const root_dir = path.join(path_, \"/farmui\");\n      const comp_spinner = ora(\n        `Looking for the components with id ${options.id}`\n      );\n      comp_spinner.start();\n      let comp_fetch = null;\n      let comp_db: any[] = [];\n      try {\n        comp_fetch = await fetch(COMPONENT_REGISTERY_URL!);\n\n        comp_db = await comp_fetch.json();\n      } catch (err) {\n        logger.error(\n          \"\\nCant import the components. Please check your network connection\"\n        );\n        logger.info(\n          \"If you think this is an bug, Please make an issue - https://github.com/Kinfe123/farm-ui/issues/new\"\n        );\n        process.exit(0);\n      }\n      comp_spinner.succeed(\n        `Found the component. Preview here - https://farmui.com/example/${options.id}`\n      );\n      comp_spinner.stop();\n      const select_files_by_id = comp_db.find((x) => x.id === options.id);\n      if (!select_files_by_id) {\n        logger.error(\n          \"No such component exists with in this ID, Please hop on https://farmui.com/components to double check the component ID\"\n        );\n        logger.info(\n          \"If you think this is an bug, Please make an issue - https://github.com/Kinfe123/farm-ui/issues/new\"\n        );\n        process.exit(0);\n      }\n\n      const exist = existsSync(root_dir);\n\n      if (exist) {\n        // logic for existing directory for componnts to be stored\n        const { proceed } = await prompts({\n          type: \"confirm\",\n          name: \"proceed\",\n          message: `Ready to install components and dependencies. Proceed?`,\n          initial: true,\n        });\n\n        if (!proceed) {\n          logger.info(\n            \"Make sure you have the right path to dump the components\"\n          );\n          process.exit(0);\n        }\n      } else {\n        await fs.mkdir(root_dir, { recursive: true });\n      }\n      const path_to_add: CompToAddProps[] = [];\n\n      // for now , the content we will support will be react based , till we have updated the ednpoint\n      // here , we are eccepting the custom name for the root component name\n      let root_comp_name = select_files_by_id.files[0].root.name;\n      let is_customed = false;\n      while (!is_customed) {\n        const { componentName } = await prompts({\n          type: \"text\",\n          name: \"componentName\",\n          message: `What do you want the component to be called? (leave it blank which defaults to ${root_comp_name})`,\n          hint: \"component name\",\n        });\n        if (!componentName) {\n          break;\n        }\n\n        const named_comp_dir = path.join(root_dir, `${componentName}.tsx`);\n\n        const already_existd_comp_name = existsSync(named_comp_dir);\n        if (already_existd_comp_name) {\n          logger.warn(\n            \"The component with that name already existed. Please with another name\"\n          );\n        } else {\n          root_comp_name = componentName;\n          is_customed = true;\n        }\n      }\n\n      const tailwind_values = select_files_by_id[\"tailwind\"];\n      if (tailwind_values) {\n        logger.info(\"The components need tailwind.config.(ts/js) change\");\n\n        const tailwind_config_js = path.join(\n          process.cwd(),\n          \"tailwind.config.js\"\n        );\n        const tailwind_config_ts = path.join(\n          process.cwd(),\n          \"tailwind.config.ts\"\n        );\n        let config_exists = \"ts\";\n        let is_config_exist = true;\n        if (\n          !existsSync(tailwind_config_ts) &&\n          !existsSync(tailwind_config_js)\n        ) {\n          is_config_exist = false;\n        }\n        if (!is_config_exist) {\n          logger.warn(\n            \"The tailwind.config.(js/ts) can not be found with in the given directory , Please make sure to intialize your project with tailwindcss or shadcn , may be any UI component library that built on top of tailwind\"\n          );\n          logger.warn(\n            \"Please use this instructions to setup your tailwindcss - https://tailwindcss.com/docs/installation\"\n          );\n          logger.info(\"Skipping... and importing the components\");\n        } else {\n          // means the either the js or tailwind config exists\n          if (existsSync(tailwind_config_js)) {\n            config_exists = \"js\";\n          }\n          const tailwind_config_file = `tailwind.config.${config_exists}`;\n\n          const tailwin_config_path = path.join(\n            process.cwd(),\n            tailwind_config_file\n          );\n          const read_tailwind_config = await fs.readFile(\n            tailwin_config_path,\n            \"utf8\"\n          );\n          TAILWIND_EXTEND_PROPS.map((props) => {\n            if (props in tailwind_values) {\n              logger.info(\n                `For ${props} - copy the following and paste it to your ${tailwind_config_file}`\n              );\n              const tailwind_props_value = tailwind_values[props].content;\n              console.log({ [props]: tailwind_props_value });\n            }\n          });\n        }\n      }\n      const supported_fm = select_files_by_id.files[0].root.contents[framework];\n      if (!supported_fm) {\n        logger.info(\n          \"We have not added the component yet. But you can be the on to add this. hop on https://github.com/Kinfe123/farm-ui\"\n        );\n        process.exit(0);\n      }\n      const root_comp_content =\n        select_files_by_id.files[0].root.contents[framework].content;\n      const root_comp_path = path.join(root_dir, root_comp_name);\n      let child_comp = [];\n      if (select_files_by_id[1]) {\n        child_comp = select_files_by_id.files[1].child;\n      }\n      path_to_add.push({\n        comp_content: root_comp_content,\n        comp_path: root_comp_path,\n      });\n\n      const depends_on: any[] = child_comp;\n      depends_on.map((dep) => {\n        const child_comp_name = dep.name;\n        const child_comp_content = dep.contents[framework].content;\n        const child_comp_path = path.join(root_dir, child_comp_name);\n        path_to_add.push({\n          comp_content: child_comp_content,\n          comp_path: child_comp_path,\n        });\n      });\n      const spinner = ora(`Dumping your components...`);\n      let spinner_overwrite = ora(\"Overriting\");\n      const dependencies: string[] = select_files_by_id.dependencies;\n      if (!path_to_add) {\n        logger.warn(\"No component to add\");\n      } else {\n        path_to_add.map(async ({ comp_content, comp_path }) => {\n          const comp_write_path = `${comp_path}.tsx`;\n          if (existsSync(comp_write_path)) {\n            const { overwrite } = await prompts({\n              type: \"confirm\",\n              name: \"overwrite\",\n              message: `Override already existed component? Proceed?`,\n              initial: true,\n            });\n            if (overwrite) {\n              spinner_overwrite = ora(\n                `Overwriting the component at ${comp_write_path}....`\n              );\n              spinner_overwrite.start();\n              await fs.writeFile(`${comp_path}.tsx`, comp_content);\n            } else {\n              logger.info(\n                `Skipping: The component ${comp_write_path} already existed`\n              );\n            }\n          } else {\n            spinner.start();\n            await fs.writeFile(`${comp_path}.tsx`, comp_content);\n          }\n        });\n      }\n      const packageManager = await getPackageManager(custom_cwd);\n      if (dependencies?.length) {\n        await execa(`${packageManager}`, [\"install\", ...dependencies], {\n          cwd: process.cwd(),\n        });\n      }\n      spinner.stop();\n      spinner_overwrite.stop();\n      const packageInfo = getPackageInfo();\n      const dependenciesMeta = packageInfo.dependencies;\n      if (dependencies.length) {\n        logger.info(`Dependencies - ${dependencies.length} added`);\n        dependencies.map((dep) => {\n          let version =\n            (dependenciesMeta && String(dependenciesMeta[dep])) ?? \"\";\n          logger.success(` + ${dep} @ ${version}`);\n        });\n      }\n      if (path_to_add) {\n        const path_for_comp = root_dir.split(\"/\");\n        const last_two =\n          path_for_comp[path_for_comp.length - 2] +\n          \"/\" +\n          path_for_comp[path_for_comp.length - 1];\n\n        logger.info(\n          `Components - ${path_to_add.length} added inside of ${last_two}`\n        );\n        path_to_add.map((comps) => {\n          const comp_names = comps.comp_path.split(\"/\");\n          const comp_name = comp_names[comp_names.length - 1];\n          logger.success(` + ${comp_name}`);\n        });\n      }\n      spinner.succeed(\"Successfully installed\");\n    } catch (err) {\n      logger.error(\"Error has occured!\");\n      console.log(\"Error: \", err);\n    }\n  });\n","import path from \"path\"\nimport fs from \"fs-extra\"\nimport { type PackageJson } from \"type-fest\"\n\nexport function getPackageInfo() {\n  const packageJsonPath = path.join(\"package.json\")\n\n  return fs.readJSONSync(packageJsonPath) as PackageJson\n}\n","import { getPackageInfo } from \"./get-package-info\";\n\nconst packageInfo =  getPackageInfo()\n\n\nexport const FARMUI_GRAFFITI = `\n░▒▓████████▓▒░▒▓██████▓▒░░▒▓███████▓▒░░▒▓██████████████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓██████▓▒░░▒▓████████▓▒░▒▓███████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░  \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░░▒▓█▓▒░  v${packageInfo.version}\n                                                                               \n`;\n","import chalk from \"chalk\"\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n  break() {\n    console.log(\"\")\n  },\n}\n","import { detect } from \"@antfu/ni\"\n\nexport async function getPackageManager(\n  targetDir: string\n): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === \"yarn@berry\") return \"yarn\"\n  if (packageManager === \"pnpm@6\") return \"pnpm\"\n  if (packageManager === \"bun\") return \"bun\"\n\n  return packageManager ?? \"npm\"\n}\n","export const framework_supports = [\n    {\n        name: \"React\",\n        value: \"react\",\n\n    },\n    {\n        name: \"Vue\",\n        value: \"vue\",\n\n    },\n    {\n        name: \"Svelte\",\n        value: \"svelte\",\n\n    },\n    {\n        name: \"Html\",\n        value: \"html\",\n\n    },\n]"],"mappings":"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","names":["Command","existsSync","fs","path","gradient","Command","ora","execa","prompts","path","fs","getPackageInfo","packageJsonPath","packageInfo","getPackageInfo","FARMUI_GRAFFITI","chalk","logger","args","z","detect","getPackageManager","targetDir","packageManager","framework_supports","COMPONENT_REGISTERY_URL","addCommandInput","z","TAILWIND_EXTEND_PROPS","gradient","FARMUI_GRAFFITI","add","Command","id","opts","options","custom_cwd","path","framework","framework_supports","existsSync","logger","defaultDir","custom_cwd_flag","dir","prompts","srcDir","resp","fm","path_","root_dir","comp_spinner","ora","comp_fetch","comp_db","select_files_by_id","x","proceed","fs","path_to_add","root_comp_name","is_customed","componentName","named_comp_dir","tailwind_values","tailwind_config_js","tailwind_config_ts","config_exists","is_config_exist","tailwind_config_file","tailwin_config_path","read_tailwind_config","props","tailwind_props_value","root_comp_content","root_comp_path","child_comp","dep","child_comp_name","child_comp_content","child_comp_path","spinner","spinner_overwrite","dependencies","comp_content","comp_path","comp_write_path","overwrite","packageManager","getPackageManager","execa","dependenciesMeta","getPackageInfo","version","path_for_comp","last_two","comps","comp_names","comp_name","err","main","packageInfo","getPackageInfo","program","Command","add"]}